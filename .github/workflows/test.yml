name: Test

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

permissions:
  contents: read

jobs:
  test:
    runs-on: self-hosted
    environment: Test

    steps:
    - uses: actions/checkout@v4

    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
        registry-url: 'http://172.20.60.129:4873'

    - name: Cache Jest
      uses: actions/cache@v4
      with:
        path: .jest-cache
        key: jest-${{ runner.os }}-${{ hashFiles('**/package-lock.json', '**/pnpm-lock.yaml') }}
        restore-keys: |
          jest-${{ runner.os }}-

    - name: Install Temporal CLI
      uses: temporalio/setup-temporal@v0

    - name: Verify Temporal CLI
      run: temporal operator cluster health --address ${{ secrets.TEMPORAL_ADDRESS }}

    - name: Configure pnpm registry
      run: pnpm config set registry http://172.20.60.129:4873

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run linter
      run: pnpm lint

    - name: Run type check
      run: pnpm build
      env:
        NOVU_SECRET_KEY: ${{ secrets.NOVU_SECRET_KEY }}
        NEXT_PUBLIC_NOVU_APPLICATION_IDENTIFIER: ${{ secrets.NEXT_PUBLIC_NOVU_APPLICATION_IDENTIFIER }}
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        TEMPORAL_ADDRESS: ${{ secrets.TEMPORAL_ADDRESS }}
        TEMPORAL_NAMESPACE: ${{ secrets.TEMPORAL_NAMESPACE }}
        TEMPORAL_TASK_QUEUE: ${{ secrets.TEMPORAL_TASK_QUEUE }}

    - name: Run connection tests
      run: pnpm test:connection
      env:
        CI: true
        # Connection test credentials
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NOVU_SECRET_KEY: ${{ secrets.NOVU_SECRET_KEY }}
        NEXT_PUBLIC_NOVU_APPLICATION_IDENTIFIER: ${{ secrets.NEXT_PUBLIC_NOVU_APPLICATION_IDENTIFIER }}
        TEMPORAL_ADDRESS: ${{ secrets.TEMPORAL_ADDRESS }}
        TEMPORAL_NAMESPACE: ${{ secrets.TEMPORAL_NAMESPACE }}
        TEMPORAL_TASK_QUEUE: ${{ secrets.TEMPORAL_TASK_QUEUE }}

    - name: Run unit tests
      run: pnpm test:unit
      env:
        CI: true
        NODE_ENV: test
        # Connection test credentials
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NOVU_SECRET_KEY: ${{ secrets.NOVU_SECRET_KEY }}
        NEXT_PUBLIC_NOVU_APPLICATION_IDENTIFIER: ${{ secrets.NEXT_PUBLIC_NOVU_APPLICATION_IDENTIFIER }}
        TEMPORAL_ADDRESS: ${{ secrets.TEMPORAL_ADDRESS }}
        TEMPORAL_NAMESPACE: ${{ secrets.TEMPORAL_NAMESPACE }}
        TEMPORAL_TASK_QUEUE: ${{ secrets.TEMPORAL_TASK_QUEUE }}

    - name: Run integration tests
      run: pnpm test:integration
      env:
        CI: true
        NODE_ENV: test
        # Connection test credentials
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NOVU_SECRET_KEY: ${{ secrets.NOVU_SECRET_KEY }}
        NEXT_PUBLIC_NOVU_APPLICATION_IDENTIFIER: ${{ secrets.NEXT_PUBLIC_NOVU_APPLICATION_IDENTIFIER }}
        TEMPORAL_ADDRESS: ${{ secrets.TEMPORAL_ADDRESS }}
        TEMPORAL_NAMESPACE: ${{ secrets.TEMPORAL_NAMESPACE }}
        TEMPORAL_TASK_QUEUE: ${{ secrets.TEMPORAL_TASK_QUEUE }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          coverage/
          junit.xml
        retention-days: 7
